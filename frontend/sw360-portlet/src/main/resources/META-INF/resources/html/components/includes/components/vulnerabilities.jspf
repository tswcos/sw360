<%--
  ~ Copyright Siemens AG, 2016-2017, 2019. Part of the SW360 Portal Project.
  ~ With modifications from Bosch Software Innovations GmbH, 2016.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<%@ page import="com.liferay.portal.kernel.portlet.PortletURLFactoryUtil" %>
<%@ page import="javax.portlet.PortletRequest" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.RequestStatus" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.VerificationState" %>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants" %>

<portlet:resourceURL var="updateVulnerabilitiesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITIES_COMPONENT%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="updateVulnerabilityVerification">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITY_VERIFICATION%>"/>
</portlet:resourceURL>

<jsp:useBean id="vulnerabilityList" type="java.util.List<org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilityDTO>" scope="request"/>
<jsp:useBean id="numberOfVulnerabilities" type="java.lang.Integer" scope="request"/>
<jsp:useBean id="vulnerabilityVerificationTooltips" type="java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>"
             scope="request"/>
<jsp:useBean id="vulnerabilityMatchedByHistogram" type="java.util.Map<java.lang.String, java.lang.Long>" scope="request"/>

<jsp:useBean id="viewSize" type="java.lang.Integer" scope="request"/>

<div class="container">
    <div class="row">
        <div class="col">
            <div class="alert alert-info" role="alert">
                <liferay-ui:message key="total.vulnerabilities" /> <strong>${numberOfVulnerabilities}</strong>
            </div>
        </div>
    </div>
    <div class="row mt-2">
        <div class="col">
            <h4><liferay-ui:message key="vulnerabilities" /></h4>
            <form class="form-inline">
                <table id="vulnerabilityTable" class="table table-bordered" data-view-size="${viewSize}" data-editable="${vulnerabilityVerificationEditable}" data-inside-component="${inComponentDetailsContext}">
                </table>
                <core_rt:if test="${vulnerabilityVerificationEditable}">
                    <div class="form-group">
                        <label for="rating-change-for-selected"><liferay-ui:message key="change.verification.state.of.selected.vulnerabilities.to" /></label>
                        <select id="rating-change-for-selected" class="form-control" name="<portlet:namespace/><%=VerificationState.class%>">
                            <sw360:DisplayEnumOptions type="<%=VerificationState.class%>" inQuotes="true"/>
                        </select>
                        <button id="apply-to-selected" type="button" class="btn btn-primary"><liferay-ui:message key="change.state" /></button>
                    </div>
                </core_rt:if>
            </form>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col">
            <h4><liferay-ui:message key="vulnerability.matching.statistics" /></h4>
            <ul>
                <core_rt:forEach items="${vulnerabilityMatchedByHistogram.keySet()}" var="matchedBy">
                    <li>
                        <b><sw360:out value='${vulnerabilityMatchedByHistogram.get(matchedBy)}'/></b>
                        of the vulnerabilities were matched by
                        <b><sw360:out value='${matchedBy}'/></b>
                    </li>
                </core_rt:forEach>
            </ul>
        </div>
    </div>
</div>

<%@include file="/html/utils/includes/vulnerabilityModal.jspf" %>

<%--for javascript library loading --%>
<%@ include file="/html/utils/includes/requirejs.jspf" %>
<script type="text/javascript">
    require(['jquery', 'bridges/datatables', 'modules/dialog', 'bridges/jquery-ui'], function ($, datatable, dialog) {
        var vulnerabilityTable;

        vulnerabilityTable = createVulnerabilityTable();
        $('#vulnerabilityTable').on('change', '[data-action="select-all"]', function(event) {
            if($(event.currentTarget).is(':checked')) {
                vulnerabilityTable.rows().select();
            } else {
                vulnerabilityTable.rows().deselect();
            }
        });
        $('#vulnerabilityTable').on('change', 'td :checkbox', function(event) {
            $('#vulnerabilityTable th [data-action="select-all"]').prop('checked', !($('#vulnerabilityTable td :checkbox:not(:checked)').length > 0));
        });

        var viewSize = $('#vulnerabilityTable').data().viewSize;
        $('#btnShowVulnerabilityCount [data-name="count"]').text(viewSize > 0 ? 'latest ' + viewSize : 'all');
        $('#btnShowVulnerabilityCount + div > a').on('click', function(event) {
            var viewSize = $(event.currentTarget).data().type;

            var PortletURL = Liferay.PortletURL;
            var portletURL = PortletURL.createURL('<%= PortletURLFactoryUtil.create(request, portletDisplay.getId(), themeDisplay.getPlid(), PortletRequest.RENDER_PHASE) %>');
            portletURL.setParameter('<%=PortalConstants.PAGENAME%>', '<%=PortalConstants.PAGENAME_DETAIL%>');
            portletURL.setParameter('<%=PortalConstants.COMPONENT_ID%>', '${component.id}');
            portletURL.setParameter('<%=PortalConstants.VIEW_SIZE%>', viewSize);

            window.location.href = portletURL.toString() + window.location.hash;
        });

        if($('#vulnerabilityTable').data().editable) {
            $('#apply-to-selected').on('click', function () {
                batchChangeVerification();
            });
        }

        function createVulnerabilityTable() {
            var table,
                tableDefinition,
                result = [];

            <core_rt:forEach items="${vulnerabilityList}" var="vulnerability">
                result.push({
                    releaseName: "<sw360:out value='${vulnerability.intReleaseName}'/>",
                    externalId: "${vulnerability.externalId}",
                    externalIdLink: "<sw360:DisplayVulnerabilityLink vulnerabilityId="${vulnerability.externalId}"/>",
                    intReleaseId: "<sw360:out value="${vulnerability.intReleaseId}"/>",
                    priority: {
                        text: "<sw360:out value='${vulnerability.priority}'/>",
                        tooltip: "<sw360:out value='${vulnerability.priorityToolTip}'/>"
                    },
                    title: {
                        text: "<sw360:out value='${vulnerability.title}'/>",
                        tooltip: "<sw360:out value='${vulnerability.description}'/>"
                    },
                    matchedBy: {
                        text: "<sw360:out value='${vulnerability.matchedBy}'/>",
                        tooltip: "Found with needle: <sw360:out value='${vulnerability.usedNeedle}'/>"
                    },
                    relevance: {
                        text: "<sw360:DisplayEnum value="${vulnerabilityVerifications.get(vulnerability.externalId).get(vulnerability.intReleaseId)}"/>",
                        tooltip: "<sw360:out value="${vulnerabilityVerificationTooltips.get(vulnerability.externalId).get(vulnerability.intReleaseId)}"/>"
                    },
                    action: "<sw360:out value="${vulnerability.action}"/>"
                });
            </core_rt:forEach>

            tableDefinition = {
                data: result,
                columns: [
                    { title: '', data: null, className: 'text-center', render: $.fn.dataTable.render.inputCheckbox('vulnerability', '') },
                    { title: "<liferay-ui:message key="external.id" />", data: 'externalIdLink' },
                    { title: "<liferay-ui:message key="priority" />", data: 'priority', render: $.fn.dataTable.render.infoText('/o/org.eclipse.sw360.liferay-theme/images/clay/icons.svg#info-circle-open') },
                    { title: "<liferay-ui:message key="matched.by" />", data: 'matchedBy', render: $.fn.dataTable.render.infoText() },
                    { title: "<liferay-ui:message key="title" />", data: 'title', render: $.fn.dataTable.render.infoText() },
                    { title: "<liferay-ui:message key="verification" />", data: 'relevance', render: $.fn.dataTable.render.infoText('/o/org.eclipse.sw360.liferay-theme/images/clay/icons.svg#info-circle-open') },
                    { title: "<liferay-ui:message key="actions" />", data: 'action', default: '' }
                ],
               	language: {					
					paginate: {
					  previous: "<liferay-ui:message key="previous" />",
					  next: "<liferay-ui:message key="next" />"
					},
					emptyTable: "<liferay-ui:message key="no.data.available.in.table" />",
					info: "<liferay-ui:message key="showing" />",
					infoEmpty: "<liferay-ui:message key="infoempty" />",
					lengthMenu: "<liferay-ui:message key="show.x.entries" />"
					},
                order: [[3, 'asc'], [4, 'desc']],
            }

            if($('#vulnerabilityTable').data().insideComponent) {
                tableDefinition.columns.splice(1, 0, { title: "<liferay-ui:message key="release" />", data: 'releaseName' });
            }

            if($('#vulnerabilityTable').data().editable) {
                tableDefinition.select = 'multi+shift';
                tableDefinition.columns[0].title = '<div class="form-check"><input data-action="select-all" type="checkbox" class="form-check-input" /></div>';
            }

            if($('#vulnerabilityTable').data().insideComponent) {
                table = datatable.create('#vulnerabilityTable', tableDefinition, [1, 2, 3, 4, 5, 6], [0, 7], true);
            } else {
                table = datatable.create('#vulnerabilityTable', tableDefinition, [1, 2, 3, 4, 5], [0, 6], true);
            }
            if($('#vulnerabilityTable').data().editable) {
                datatable.enableCheckboxForSelection(table, 0);
            }

            $('#vulnerabilityTable .info-text').tooltip({
                delay: 0,
                track: true,
                fade: 250,
                classes: {
                     "ui-tooltip": "ui-corner-all ui-widget-shadow info-text"
                },
                content: function () {
                    return $('<textarea/>').html($(this).prop('title')).val();
                }
            });

            return table;
        }

        <core_rt:if test="${vulnerabilityVerificationEditable}">
            function batchChangeVerification() {
                var selectedRows = vulnerabilityTable.rows('.selected');
                var selectedValue = $("#rating-change-for-selected").children("option:selected");

                var newValue = selectedValue.val();
                var newValueText = selectedValue.text();

                var $dialog = dialog.open('#vulnerabilityDialog', {
                    button: 'Change State',
                    vulnerabilityCount: selectedRows.data().length,
                    verification: newValueText
                }, function(submit, callback, data) {
                    executeRatingChange(selectedRows, newValue, newValueText, data.comment).then(function() {
                        callback(true);
                    }).catch(function(error) {
                        $dialog.alert(error);
                        callback();
                    });
                });
            }

            function executeRatingChange(selectedRows, newValue, newValueText, comment) {
                var vulnerabilityIds = [];
                var releaseIds = [];

                selectedRows.data().each(function (item) {
                    vulnerabilityIds.push(item['externalId']);
                    releaseIds.push(item['intReleaseId']);
                });

                var data = {};
                data["<portlet:namespace/><%=PortalConstants.RELEASE_IDS%>"] = releaseIds;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_IDS%>"] = vulnerabilityIds;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_VALUE%>"] = newValue;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_VERIFICATION_COMMENT%>"] = comment;

                return new Promise(function(resolve, reject) {
                    $.ajax({
                        url: '<%=updateVulnerabilityVerification%>',
                        type: 'POST',
                        dataType: 'json',
                        data: data,
                        success: function(response){
                            switch (response.<%=PortalConstants.REQUEST_STATUS%>) {
                                case '<%=RequestStatus.FAILURE%>':
                                    reject("Update failed.");
                                    break;
                                case '<%=RequestStatus.SUCCESS%>':
                                    $('#numberOfVulnerabilitiesDiv').addClass('bg-warning');
                                    $('#numberOfVulnerabilitiesDiv').html('&#8634;');

                                    selectedRows.every(function () {
                                        this.data().relevance = {
                                            text: newValueText,
                                            tooltip: "<liferay-ui:message key="you.just.changed.this.value.please.reload.page" />"
                                        };
                                        this.invalidate();
                                    });
                                    selectedRows.deselect();

                                    resolve();
                                    break;
                                default:
                            }
                        },
                        error: function() {
                            reject('Unknown request error.');
                        }
                    });
                });
            }
        </core_rt:if>
    });
</script>
