<%--
  ~ Copyright Siemens AG, 2013-2017, 2019. Part of the SW360 Portal Project.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants" %>
<%@ page import="org.eclipse.sw360.portal.common.page.PortletReleasePage" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<jsp:useBean id="releasesAndProjects" type="java.util.List<org.eclipse.sw360.datahandler.thrift.components.ReleaseClearingStatusData>" scope="request"/>

<core_rt:if test="${releasesAndProjects.size() == 0 }">
    <div class="alert alert-info" role="alert">
        <liferay-ui:message key="please.add.linked.releases.or.projects.with.linked.releases.to.view.their.clearing.status.here" />
    </div>
</core_rt:if>
<core_rt:if test="${releasesAndProjects.size()  > 0 }">
    <table id="releasesTable" class="table table-bordered" data-details-context="${inProjectDetailsContext}"></table>
</core_rt:if>

<script type="text/javascript">
require(['jquery', 'bridges/datatables', 'utils/render'], function ($, datatables, render) {
    var homeUrl = themeDisplay.getURLHome().replace(/\/web\//, '/group/');

    createClearingTable();

    $('#exportReleasesSpreadsheetClearingButton').on('click', exportReleasesSpreadsheet);

    function createClearingTable() {
        var table,
            result = [],
            editRelease;

        <core_rt:forEach items="${releasesAndProjects}" var="releasesClearingStatusData">
            result.push({
                "DT_RowId": "${releasesClearingStatusData.release.id}",
                "0": "<sw360:DisplayReleaseLink release="${releasesClearingStatusData.release}" showFullname="true"/>",
                "1": "<sw360:out value="${releasesClearingStatusData.projectNames}"/>",
                "2": "<span id='releaseClearingState${releasesClearingStatusData.release.id}'><sw360:DisplayEnum value="${releasesClearingStatusData.release.clearingState}"/></span>",
                "3": "<sw360:DisplayEnum value="${releasesClearingStatusData.release.mainlineState}"/>",
                <c:set var="key_lower" value="${fn:toLowerCase(releasesClearingStatusData.mainlineStates)}"/>
                <c:set var="key" value="${fn:replace(key_lower, ' ', '.')}"/>
                "4": "<liferay-ui:message key='${key}' />",
                "5": "<sw360:DisplayEnum value="${releasesClearingStatusData.componentType}"/>",
                "6": "${releasesClearingStatusData.release.id}"
            });
        </core_rt:forEach>

        table = datatables.create('#releasesTable', {
            data: result,
            columns: [
                {title: "<liferay-ui:message key="name" />"},
                {title: "<liferay-ui:message key="project.origin" />"},
                {title: "<liferay-ui:message key="clearing.state" />"},
                {title: "<liferay-ui:message key="release.mainline.state" />"},
                {title: "<liferay-ui:message key="project.mainline.state" />"},
                {title: "<liferay-ui:message key="type" />"},
                {title: "<liferay-ui:message key="actions" />", render: {display: renderActions}, className: "two actions" }
            ],
            columnDefs: [
                {
                    targets: [ 6 ],
                    visible: $('#releasesTable').data() ? $('#releasesTable').data().detailsContext : false
                }
            ],
            language: {
                paginate: {
                    previous: "<liferay-ui:message key="previous" />",
                    next: "<liferay-ui:message key="next" />"
                },
                info: "<liferay-ui:message key="showing" />",
                lengthMenu: '<liferay-ui:message key="show" /> <select>'+
                '<option value="10">10</option>'+
                '<option value="25">25</option>'+
                '<option value="50">50</option>'+
                '<option value="100">100</option>'+
                '<option value="-1"><liferay-ui:message key="all" /></option>'+
                '</select> <liferay-ui:message key="entries" />',
                processing: "<liferay-ui:message key="processing" />",
                loadingRecords: "<liferay-ui:message key="loading" />",
                infoFiltered: "<liferay-ui:message key="filtered.from.max.total.entries" />",
                zeroRecords: "<liferay-ui:message key="no.matching.records.found" />",
                infoEmpty: "<liferay-ui:message key="infoempty" />",
                search: "<liferay-ui:message key="search" />"
            }
        }, [0, 1, 2, 3, 4, 5], 6, true);

        function renderActions(id, type, row) {
            var $actions = $('<div>', {
                    'class': 'actions'
                }),
                $editAction = render.linkTo(
                    makeReleaseUrl(row[6]),
                    "",
                    '<svg class="lexicon-icon" title="<liferay-ui:message key="edit" />"><use href="/o/org.eclipse.sw360.liferay-theme/images/clay/icons.svg#pencil"/></svg>'
                );

            $actions.append($editAction);
            return $actions[0].outerHTML;
        }
    }

    function exportReleasesSpreadsheet() {
        var portletURL = Liferay.PortletURL.createURL('<%= PortletURLFactoryUtil.create(request, portletDisplay.getId(), themeDisplay.getPlid(), PortletRequest.RESOURCE_PHASE) %>');

        portletURL.setParameter('<%=PortalConstants.ACTION%>', '<%=PortalConstants.EXPORT_CLEARING_TO_EXCEL%>');
        portletURL.setParameter('<%=PortalConstants.PROJECT_ID%>', '${project.id}');

        window.location.href = portletURL.toString() + window.location.hash;
    }

    // helper functions
    function makeReleaseUrl(releaseId) {
        return homeUrl + '/components/-/component/release/editRelease/' + releaseId;
    }
});
</script>
